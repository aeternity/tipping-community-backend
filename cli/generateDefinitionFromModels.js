const fs = require('fs');

const { sequelize } = require('../models');

const { models } = sequelize;
const result = Object.keys(models).map(model => {
  const attributes = models[model].attributes || models[model].rawAttributes;
  return {
    model,
    fields: Object.keys(attributes).map(column => ({
      column,
      type: attributes[column].type.constructor.key,
      // eslint-disable-next-line no-underscore-dangle
      allowNull: attributes[column].allowNull || attributes[column]._autoGenerated,
      values: attributes[column].values,
    })),
  };
});

const openAPIJSON = {
  components: {
    schemas: result.reduce((acc, model) => ({
      ...acc,
      [model.model]: {
        type: 'object',
        required: model.fields.filter(field => !field.allowNull).map(field => field.column),
        properties: model.fields.reduce((allProperties, curr) => ({
          ...allProperties,
          [curr.column]: {
            type: curr.type.toLowerCase(),
            ...(curr.type === 'ENUM') && { enum: curr.values },
          },
        }), {}),
      },
    }), {}),
  },
};

fs.writeFileSync('models.json', JSON.stringify(openAPIJSON));
