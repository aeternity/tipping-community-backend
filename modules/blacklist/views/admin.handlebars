<style>
  html, body {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
  }

  button {
    display: inline-block;
  }

  header {
    display: flex;
    align-items: baseline;
    padding-left: 10px;
  }

  h1 {
    margin: 5px;
  }

  h1 a {
    text-decoration: none;
    color: inherit;
  }

  img {
    width: 200px;
    height: 150px;
    object-fit: cover;
  }

  p {
    margin: 5px 0;
  }

  ul {
    display:flex;
    margin: 5px;
    padding: 0;
    flex-wrap: wrap;
    list-style:none;
  }

  li {
    margin-right: 5px;
  }

  .pagination {
    margin: 5px;
    padding-left: 10px;
  }

  .card {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    width: calc(100% - 10px);
    margin: 5px;
    box-sizing: border-box;
  }

  .container {
    display: flex;
    flex-wrap: wrap;
    padding: 5px;
  }

  @media screen and (min-width: 1025px) {
    .card {
      width: 48%;
    }
  }

  .blocked {
    color: red;
  }

  .visible {
    color: green;
  }

  .action {
    margin: 10px 0;
  }

  .second-row span{
    margin-right: 10px;
  }

  .address {
    overflow: hidden;
    text-overflow: ellipsis;
  }

  hr {
    border: none;
    height: 1px;
    background-color: #ccc;
    margin: 5px 0;
  }
</style>

{{>header show=query.show type=query.type ordering=query.ordering}}
{{>pagination length=length page=query.page limit=query.limit}}
<div class="container">
{{#each items}}
{{>card this}}
{{/each}}
</div>

<script type="text/javascript">
  function addToBlacklist (id) {
    fetch('/blacklist/api', {
      method: 'POST',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ tipId: id }),
    }).finally(() => window.location.reload());
  }

  function removeFromBlacklist (id) {
    fetch('/blacklist/api/' + window.encodeURIComponent(id), {
      method: 'DELETE',
    }).finally(() => window.location.reload());
  }

  function updateFlaggedToBlocked (id) {
    fetch('/blacklist/api/' + window.encodeURIComponent(id), {
      method: 'PUT',
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({status: 'hidden'})
    }).finally(() => window.location.reload());
  }

  function setParams (params) {
    const query = new URLSearchParams(window.location.search)
    for (const param in params) {
      query.set(param, params[param])
    }
    window.location.search = query;
  }

  function deleteParam (param) {
    const query = new URLSearchParams(window.location.search)
    query.delete(param)
    window.location.search = query
  }

  function goToPage () {
    const {min, max, value} = document.querySelector('#pagenum');
    if ( +value >= +min && +value <= +max) setParams({page: value});
  }

  function changeLimit () {
    const {value} = document.querySelector('#limit');
    setParams({limit: value, page: '1'});
  }

  function sortAndFilter (param) {
    const {value} = document.querySelector(`#${param}`);
    if (value) setParams({[param]: value, page: '1'});
    else deleteParam(param);
  }
</script>
