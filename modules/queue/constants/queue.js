const MESSAGE_QUEUES = {
  CACHE: 'CACHE',
  TIPS: 'TIPS',
  RETIPS: 'RETIPS',
  LINKPREVIEW: 'LINKPREVIEW',
  PROFILE: 'PROFILE',
  BLOCKCHAIN: 'BLOCKCHAIN',
  EVENTS: 'EVENTS',
  SCHEDULED_EVENTS: 'SCHEDULED_EVENTS',
};

if (process.env.NODE_ENV === 'test') {
  MESSAGE_QUEUES.TEST = 'TEST';
  MESSAGE_QUEUES.TEST_2 = 'TEST_2';
}

// TODO verify that events are correctly phrased or build automatic correction tool
const MESSAGES = {
  CACHE: {
    COMMANDS: {
      KEEPHOT: 'CACHE.COMMANDS.KEEPHOT',
      RENEW_TIPS: 'CACHE.COMMANDS.RENEW_TIPS',
    },
    EVENTS: {
      RENEWED_TIPS: 'CACHE.EVENTS.RENEWED_TIPS',
      TIP_INVALIDATION_REQUEST: 'CACHE.EVENTS.TIP_INVALIDATION_REQUEST',
      RENEWED_CHAINNAMES: 'CACHE.EVENTS.RENEWED_CHAINNAMES',
    },
  },
  TIPS: {
    COMMANDS: {
      UPDATE_DB: 'TIPS.COMMANDS.UPDATE_DB',
      INSERT_TIP: 'TIPS.COMMANDS.INSERT_TIP',
    },
    EVENTS: {
      CREATED_NEW_LOCAL_TIPS: 'TIPS.EVENTS.CREATED_NEW_LOCAL_TIPS',
      UPDATE_DB_FINISHED: 'TIPS.EVENTS.UPDATE_DB_FINISHED',
    },
  },
  RETIPS: {
    COMMANDS: {
      UPDATE_DB: 'RETIPS.COMMANDS.UPDATE_DB',
      INSERT_RETIP: 'RETIPS.COMMANDS.INSERT_RETIP',
    },
  },
  LINKPREVIEW: {
    COMMANDS: {
      UPDATE_DB: 'LINKPREVIEW.COMMANDS.UPDATE_DB',
    },
    EVENTS: {
      CREATED_NEW_PREVIEWS: 'LINKPREVIEW.EVENTS.CREATED_NEW_PREVIEWS',
    },
  },
  PROFILE: {
    COMMANDS: {
      UPDATE_PREFERRED_CHAIN_NAMES: 'PROFILE.COMMANDS.UPDATE_PREFERRED_CHAIN_NAMES',
    },
  },
  BLOCKCHAIN: {
    EVENTS: {
      EVENT_RECEIVED: 'BLOCKCHAIN.EVENTS.EVENT_RECEIVED',
    },
  },
  EVENTS: {
    COMMANDS: {
      KEEPHOT: 'EVENTS.COMMANDS.KEEPHOT',
    },
    EVENTS: {
      TIP_RECEIVED: 'EVENTS.EVENTS.TIP_RECEIVED',
      RETIP_RECEIVED: 'EVENTS.EVENTS.RETIP_RECEIVED',
      TIP_WITHDRAWN: 'EVENTS.EVENTS.TIP_WITHDRAWN',
      QUERY_ORACLE: 'EVENTS.EVENTS.QUERY_ORACLE',
      CHECK_PERSIST_CLAIM: 'EVENTS.EVENTS.CHECK_PERSIST_CLAIM',
    },
  },
  SCHEDULED_EVENTS: {
    COMMANDS: {
      CACHE_KEEPHOT: 'SCHEDULED_EVENTS.COMMANDS.CACHE_KEEPHOT',
      UPDATE_CHAIN_NAMES: 'SCHEDULED_EVENTS.COMMANDS.UPDATE_CHAIN_NAMES',
      UPDATE_TIPS_RETIPS_CLAIMS: 'SCHEDULED_EVENTS.COMMANDS.UPDATE_TIPS_RETIPS_CLAIMS',
    },
  },
};

if (process.env.NODE_ENV === 'test') {
  MESSAGES.TEST = {
    COMMANDS: {
      TEST_COMMAND: 'TEST.COMMANDS.TEST_COMMAND',
      TEST_COMMAND_2: 'TEST.COMMANDS.TEST_COMMAND_2',
    },
    EVENTS: {
      TEST_EVENT: 'TEST.EVENTS.TEST_EVENT',
    },
  };
  MESSAGES.TEST_2 = {
    COMMANDS: {
      TEST_COMMAND: 'TEST_2.COMMANDS.TEST_COMMAND',
    },
    EVENTS: {
      TEST_EVENT: 'TEST_2.EVENTS.TEST_EVENT',
    },
  };
}

module.exports = {
  MESSAGE_QUEUES,
  MESSAGES,
};
